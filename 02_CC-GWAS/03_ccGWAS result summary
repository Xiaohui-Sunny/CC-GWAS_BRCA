#summary of the results
library(R.utils)
library(data.table)
library(TwoSampleMR)

## filter SNPs
setwd('/home/nfs/sunx3/project/bra_subtypes_ccgwas/result/ccgwas')
files <- c('lumB_lumA.out.results.gz', 'her2_enrich_lumA.out.results.gz',
           'trip_lumA.out.results.gz', 'her2_enrich_lumB.out.results.gz',
           'trip_lumB.out.results.gz', 'trip_lumB_her2_neg.out.results.gz',
           'trip_her2.out.results.gz')


sig.all <- c()
for (i in 1:length(files)){
  dat <- data.table::fread(files[i], header=T)
  sig <- subset(dat, OLS_pval < 5e-7 & Exact_pval < 1e-4) # OLS_pval < 5e-7 & Exact_pval < 1e-4
  sig$cc <- files[i]
  sig.all <- rbind(sig.all, sig)
}
dim(sig.all) 
 
n <- length(unique(sig.all$cc))

summary(sig.all$OLS_pval)
summary(sig.all$Exact_pval)
sig.all$flag1<-1
sig.all$flag1[dat$p < 5e-8] <- 2
table(sig.all$flag1)

summary(sig.all$p[sig.all$P < 5e-8])
sig.all$flag2 <-1
sig.all$flag2[sig.all$p > 0.01 & sig.all$P < 5e-8] <- 2 


table(sig.all$flag2)
summary(sig.all$p[sig.all$flag2 == 1])
summary(sig.all$p[sig.all$flag2 == 2])
summary(sig.all$p[sig.all$flag1 == 1 & sig.all$flag2 == 1])

table(sig.all$flag1, sig.all$flag2)

sig.all.sub <- sig.all[sig.all$flag1 == 1 & sig.all$flag2 == 1, ]

sig.all.sub$flag3 <- 1
sig.all.sub$flag3[sig.all.sub$beta < 0 & sig.all.sub$beta.1 >0] <- 2
sig.all.sub$flag3[sig.all.sub$beta > 0 & sig.all.sub$beta.1 <0] <- 2
table(sig.all.sub$flag3)

sig.all.sub.f <- sig.all.sub[sig.all.sub$flag3 == 2, ]
table(sig.all.sub.f$cc)


dbsnp <- data.table::fread('/home/nfs/sunx3/data/dbsnp/snp150Common_GRCh37.txt', header=F)
dbsnp$chr_bp <- paste0(sapply(strsplit(dbsnp$V1, 'chr'), '[', 2), '_', dbsnp$V3)

sig.all.sub.f$chr_bp <- paste0(sig.all.sub.f$CHR, '_',  sig.all.sub.f$BP)
sig.all.sub.f <- data.frame(sig.all.sub.f)
dim(sig.all.sub.f)

sig.subtype.all <- c()
files <- c('lumB_lumA.out.results.gz', 'her2_enrich_lumA.out.results.gz',
           'trip_lumA.out.results.gz', 
           'trip_lumB.out.results.gz', 'trip_lumB_her2_neg.out.results.gz'
)
for (i in 1:length(files)){
  subtype <- subset(sig.all.sub.f, cc==files[i])
  dim(subtype)
  subtype.m <- merge(subtype, dbsnp, by='chr_bp', all.x=T)
  dim(subtype.m)
  sig.subtype <- subtype.m[c('V2','CHR', 'BP', 'OLS_pval')]
  colnames(sig.subtype)[1] <- c('SNP')
  colnames(sig.subtype)[4] <- c('pval.exposure')
  subtype.sig.prune <- clump_data(sig.subtype,  clump_r2=0.09)
  subtype.m$index <- ifelse(subtype.m$CHR %in% subtype.sig.prune$CHR & 
                              subtype.m$BP %in% subtype.sig.prune$BP, 1, 0)
  sig.subtype.all <- rbind(sig.subtype.all, subtype.m)
}
table(sig.subtype.all$index)

var <- c('chr_bp', 'cc')
dup <- sig.subtype.all[duplicated(sig.subtype.all[var]), ]
dup.all <- subset(sig.subtype.all, chr_bp %in% dup$chr_bp)
# Remove all. They are either INDELS or multialellic SNPs
sig.subtype.all <- subset(sig.subtype.all, !chr_bp %in% dup.all$chr_bp)

dim(sig.subtype.all) 
table(sig.subtype.all$index)
#29 suggestive index
write.csv(sig.subtype.all, 'BCAC_subtype_ccgwas_sugg_LD_prune_0920.csv', row.names=F, quote=F)
rm(dbsnp)



## Extract original case-control results for index SNPs
index <- subset(sig.subtype.all, index==1)
BC.sub.all <- fread('/home/nfs/sunx3/bra_subtypes_ccgwas/data/icogs_onco_meta_intrinsic_subtypes_summary_level_statistics.txt', header=T)
index.m <- merge(index, BC.sub.all, by.x=c('CHR', 'BP'), by.y=c('chr.Onco', 'Position.Onco'), all.x=T)
dim(index.m)
write.csv(index.m, 'BCAC_subtype_ccgwas_index_original_gwas_results_052021.csv', row.names = F)
rm(BC.sub.all)

## Extract results for SNPs within +/-500 kb of index SNPs
for (i in 1:length(files)){
  snp.all <- c()
  dat <- data.table::fread(files[i], header=T)
  dat <- data.frame(dat)
  index.sub <- index[index$cc==files[i],]
  for (l in 1:nrow(index.sub)){
    snp <- subset(dat, CHR==index.sub$CHR[l] & BP < index.sub$BP[l]+500000 & BP > index.sub$BP[l]-500000)
    snp$index <- ifelse(snp$CHR== index.sub$CHR[l] & snp$BP == index.sub$BP[l], 1, 0)
    snp.all <- rbind(snp.all, snp)
  }
  write.csv(snp.all, paste0(files[i], 'ccgwas_1mb_index_snp_052021.csv'), row.names = F)
}

## Manhattan plot for cc-gwas results (ggplot2)
## generate the manhattan plot contianed several comprions in one figure 
library(CMplot)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(scales)
setwd('/home/nfs/sunx3/project/bra_subtypes_ccgwas/result/ccgwas')
files <- c('lumB_lumA.out.results.gz', 'her2_enrich_lumA.out.results.gz',
           'trip_lumA.out.results.gz', 'her2_enrich_lumB.out.results.gz',
           'trip_lumB.out.results.gz', 'trip_lumB_her2_neg.out.results.gz','trip_her2.out.results.gz')
# filter the SNPs
sugg.snp.all <- read.csv('/home/nfs/sunx3/project/bra_subtypes_ccgwas/result/ccgwas/sugg signal0428.csv', header=T)
sugg.snp <- sugg.snp.all
summary(sugg.snp$OLS_pval)
summary(sugg.snp$Exact_pval)
sugg.snp$flag1<-1
sugg.snp$flag1[sugg.snp$p < 5e-8] <- 2
table(sugg.snp$flag1)

summary(sugg.snp$p[sugg.snp$P < 5e-8])
sugg.snp$flag2 <-1
sugg.snp$flag2[sugg.snp$p > 0.01 & sugg.snp$P < 5e-8] <- 2
table(sugg.snp$flag2)
summary(sugg.snp$p[sugg.snp$flag2 == 1])
summary(sugg.snp$p[sugg.snp$flag2 == 2])
summary(sugg.snp$p[sugg.snp$flag1 == 1 & sugg.snp$flag2 == 1])

table(sugg.snp$flag1, sugg.snp$flag2)

sugg.snp.sub <- sugg.snp[sugg.snp$flag1 == 1 & sugg.snp$flag2 == 1, ]

sugg.snp.sub$flag3 <- 1
sugg.snp.sub$flag3[sugg.snp.sub$beta < 0 & sugg.snp.sub$beta.1 >0] <- 2
sugg.snp.sub$flag3[sugg.snp.sub$beta > 0 & sugg.snp.sub$beta.1 <0] <- 2
table(sugg.snp.sub$flag3)

sugg.snp.sub.f <- sugg.snp.sub[sugg.snp.sub$flag3 == 2, ]
table(sugg.snp.sub.f$cc)

sugg.snp.all$snp_cc <- paste0(sugg.snp.all$SNP,"_", sugg.snp.all$cc)
sugg.snp.sub.f$snp_cc <- paste0(sugg.snp.sub.f$SNP, "_", sugg.snp.sub.f$cc)
filtered.snp <- sugg.snp.all[!(sugg.snp.all$snp_cc %in% sugg.snp.sub.f$snp_cc),]

##############################
# lumA.lumB
i=1
dat.lumA.lumB <- data.table::fread(files[i], header=T)
dat.lumA.lumB[,c(2,3,6,7,8,9,10,11,12)] <- as.data.frame(sapply(dat.lumA.lumB[,c(2,3,6,7,8,9,10,11,12)], as.numeric))

filtered.snp.lumA.lumB <- subset(filtered.snp, filtered.snp$cc=="lumB_lumA.out.results.gz")

dat.lumA.lumB <- dat.lumA.lumB[!(dat.lumA.lumB$SNP %in% filtered.snp.lumA.lumB$SNP),]#5993003-54=5992949
dat.lumA.lumB <- dat.lumA.lumB[,c("SNP", "CHR","BP", "OLS_pval")]
dat.lumA.lumB$chr_bp <- paste0(dat.lumA.lumB$CHR, "_",dat.lumA.lumB$BP)
# her2.lumA
i=2
dat.her2.lumA <- data.table::fread(files[i], header=T)
dat.her2.lumA[,c(2,3,6,7,8,9,10,11,12)] <- as.data.frame(sapply(dat.her2.lumA[,c(2,3,6,7,8,9,10,11,12)], as.numeric))

filtered.snp.her2.lumA <- subset(filtered.snp, filtered.snp$cc=="her2_enrich_lumA.out.results.gz")
dat.her2.lumA <- dat.her2.lumA[!(dat.her2.lumA$SNP %in% filtered.snp.her2.lumA$SNP),]#5966325-93=5966232
dat.her2.lumA <- dat.her2.lumA[,c("SNP", "CHR","BP", "OLS_pval")]
dat.her2.lumA$chr_bp <- paste0(dat.her2.lumA$CHR, "_",dat.her2.lumA$BP)

# triple.lumA
i=3
dat.trip.lumA <- data.table::fread(files[i], header=T)
dat.trip.lumA[,c(2,3,6,7,8,9,10,11,12)] <- as.data.frame(sapply(dat.trip.lumA[,c(2,3,6,7,8,9,10,11,12)], as.numeric))

filtered.snp.triple.lumA <- subset(filtered.snp, filtered.snp$cc=="trip_lumA.out.results.gz")

dat.trip.lumA <- dat.trip.lumA[!(dat.trip.lumA$SNP %in% filtered.snp.triple.lumA$SNP),]#6042134
dat.trip.lumA <- dat.trip.lumA[,c("SNP", "CHR","BP", "OLS_pval")]
dat.trip.lumA$chr_bp <- paste0(dat.trip.lumA$CHR, "_",dat.trip.lumA$BP)

# her2.lumB
i=4
dat.her2.lumB <- data.table::fread(files[i], header=T)
dat.her2.lumB[,c(2,3,6,7,8,9,10,11,12)] <- as.data.frame(sapply(dat.her2.lumB[,c(2,3,6,7,8,9,10,11,12)], as.numeric))

filtered.snp.her2.lumB <- subset(filtered.snp, filtered.snp$cc=="her2_enrich_lumB.out.results.gz")
dat.her2.lumB <- dat.her2.lumB[!(dat.her2.lumB$SNP %in% filtered.snp.her2.lumB$SNP),] #5942545
dat.her2.lumB <- dat.her2.lumB[,c("SNP", "CHR","BP", "OLS_pval")]
dat.her2.lumB$chr_bp <- paste0(dat.her2.lumB$CHR , "_" , dat.her2.lumB$BP)

# trip and lumB
i=5
dat.trip.lumB <- data.table::fread(files[i], header=T)
dat.trip.lumB[,c(2,3,6,7,8,9,10,11,12)] <- as.data.frame(sapply(dat.trip.lumB[,c(2,3,6,7,8,9,10,11,12)], as.numeric))

filtered.snp.trip.lumB <- subset(filtered.snp, filtered.snp$cc=="trip_lumB.out.results.gz")
dat.trip.lumB <- dat.trip.lumB[!(dat.trip.lumB$SNP %in% filtered.snp.trip.lumB$SNP),]
dat.trip.lumB <- dat.trip.lumB[,c("SNP", "CHR","BP", "OLS_pval")]
dat.trip.lumB$chr_bp <- paste0(dat.trip.lumB$CHR , "_" , dat.trip.lumB$BP)


# trip and lumBHN
i=6
dat.trip.lumBHN <- data.table::fread(files[i], header=T)
dat.trip.lumBHN[,c(2,3,6,7,8,9,10,11,12)] <- as.data.frame(sapply(dat.trip.lumBHN[,c(2,3,6,7,8,9,10,11,12)], as.numeric))

filtered.snp.trip.lumBHN <- subset(filtered.snp, filtered.snp$cc=="trip_lumB_her2_neg.out.results.gz") #6023251
dat.trip.lumBHN <- dat.trip.lumBHN[!(dat.trip.lumBHN$SNP %in% filtered.snp.trip.lumBHN$SNP),]
dat.trip.lumBHN <- dat.trip.lumBHN[,c("SNP", "CHR","BP", "OLS_pval")]
dat.trip.lumBHN$chr_bp <- paste0(dat.trip.lumBHN$CHR , "_" , dat.trip.lumBHN$BP)

# trip and Her2
i=7
dat.trip.Her2 <- data.table::fread(files[i], header=T)
dat.trip.Her2[,c(2,3,6,7,8,9,10,11,12)] <- as.data.frame(sapply(dat.trip.Her2[,c(2,3,6,7,8,9,10,11,12)], as.numeric))

dat.trip.Her2 <- dat.trip.Her2[,c("SNP", "CHR","BP", "OLS_pval")]
dat.trip.Her2$chr_bp <- paste0(dat.trip.Her2$CHR , "_" , dat.trip.Her2$BP)


dat <- merge(dat.lumA.lumB, dat.her2.lumA, by = "chr_bp", all =T)
dat <- dat[,c("chr_bp","SNP.x","CHR.x","BP.x","OLS_pval.x", "OLS_pval.y")]
colnames(dat)[5:6] <- c("LumA versus LumB", "HER2 versus LumA")


dat <- merge(dat, dat.trip.lumA, by.x="chr_bp", by.y="chr_bp", all =T)
dat <- dat[,c("chr_bp","SNP.x","CHR.x","BP.x","LumA versus LumB","HER2 versus LumA", "OLS_pval")]
colnames(dat)[7] <- c("TNBC versus LumA")

dat <- merge(dat, dat.trip.lumB, by="chr_bp", all =T)
dat <- dat[,c("chr_bp","SNP.x","CHR.x","BP.x","LumA versus LumB","HER2 versus LumA","TNBC versus LumA", "OLS_pval")]
colnames(dat)[8] <- c("TNBC versus LumB")

dat <- merge(dat, dat.trip.lumBHN, by="chr_bp", all =T)
dat <- dat[,c("chr_bp","SNP.x","CHR.x","BP.x","LumA versus LumB","HER2 versus LumA","TNBC versus LumA","TNBC versus LumB", "OLS_pval")]
colnames(dat)[9] <- c("TNBC versus LumBHN")

dat <- merge(dat, dat.her2.lumB, by="chr_bp", all =T)
dat <- dat[,c("chr_bp","SNP.x","CHR.x","BP.x","LumA versus LumB","HER2 versus LumA","TNBC versus LumA","TNBC versus LumB","TNBC versus LumBHN", "OLS_pval")]
colnames(dat)[10] <- c("HER2 versus LumB")


dat <- merge(dat, dat.trip.Her2, by="chr_bp", all =T)
dat <- dat[,c("chr_bp","SNP.x","CHR.x","BP.x","LumA versus LumB","HER2 versus LumA","TNBC versus LumA","TNBC versus LumB","TNBC versus LumBHN", "HER2 versus LumB","OLS_pval")]
colnames(dat)[11] <- c("TNBC versus HER2")


dat <- dat[,-1]

colnames(dat)[1:3] <- c("SNP","CHR","BP")

## Combine Manhattan plot (7 comparison)
CMplot(dat, plot.type="m", multracks=TRUE, threshold=c(5e-8,5e-7),threshold.lty=c(1,2), 
       threshold.lwd=c(1,1), threshold.col=c("red","blue"), amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1,
       chr.den.col= NULL, signal.pch= 18, 
       file="jpg",memo="",dpi=300,file.output=TRUE,width=8,height=4)


## Separate Manhattan plot 

#col=c("#4197d8", "#f8c120", "#413496", "#495226", "#d60b6f", "#e66519", "#d581b7", "#83d3ad", "#7c162c", "#26755d"),
# LumA and lumB
CMplot(dat[,c(1:3,4)], plot.type="m",col=c("grey30","grey60"), LOG10=TRUE,threshold=c(5e-8,5e-7), threshold.lty=c(1,2),threshold.lwd=c(1,1), threshold.col=c("red","blue"),
       amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1.5,signal.col=c("#4197d8"),signal.pch= 18,chr.den.col= NULL,
       file="jpg",memo="",dpi=300,file.output=TRUE,verbose=TRUE,width=8,height=4)

# Her2 and LumA
CMplot(dat[,c(1:3,5)], plot.type="m",col=c("grey30","grey60"), LOG10=TRUE,threshold=c(5e-8,5e-7), threshold.lty=c(1,2),threshold.lwd=c(1,1), threshold.col=c("red","blue"),
       amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1.5,signal.col=c("#f8c120"),signal.pch= 18,chr.den.col= NULL,
       file="jpg",memo="",dpi=300,file.output=TRUE,verbose=TRUE,width=8,height=4)

# TNBC versus LumA
CMplot(dat[,c(1:3,6)], plot.type="m",col=c("grey30","grey60"), LOG10=TRUE,threshold=c(5e-8,5e-7), threshold.lty=c(1,2),threshold.lwd=c(1,1), threshold.col=c("red","blue"),
       amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1.5,signal.col=c("#413496"),signal.pch= 18,chr.den.col= NULL,
       file="jpg",memo="",dpi=300,file.output=TRUE,verbose=TRUE,width=8,height=4)

# TNBC versus LumB
CMplot(dat[,c(1:3,7)], plot.type="m",col=c("grey30","grey60"), LOG10=TRUE,threshold=c(5e-8,5e-7), threshold.lty=c(1,2),threshold.lwd=c(1,1), threshold.col=c("red","blue"),
       amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1.5,signal.col=c("#495226"),signal.pch= 18,chr.den.col= NULL,
       file="jpg",memo="",dpi=300,file.output=TRUE,verbose=TRUE,width=8,height=4)
# TNBC versus LumBHN
CMplot(dat[,c(1:3,8)], plot.type="m",col=c("grey30","grey60"), LOG10=TRUE,threshold=c(5e-8,5e-7), threshold.lty=c(1,2),threshold.lwd=c(1,1), threshold.col=c("red","blue"),
       amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1.5,signal.col=c("#d60b6f"),signal.pch= 18,chr.den.col= NULL,
       file="jpg",memo="",dpi=300,file.output=TRUE,verbose=TRUE,width=8,height=4)

# HER2 versus LumB
CMplot(dat[,c(1:3,9)], plot.type="m",col=c("grey30","grey60"), LOG10=TRUE,threshold=c(5e-8,5e-7), threshold.lty=c(1,2),threshold.lwd=c(1,1), threshold.col=c("red","blue"),
       amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1.5,signal.col=c("#e66519"),signal.pch= 18,chr.den.col= NULL,
       file="jpg",memo="",dpi=300,file.output=TRUE,verbose=TRUE,width=8,height=4)

#TNBC versus Her2
CMplot(dat[,c(1:3,10)], plot.type="m",col=c("grey30","grey60"), LOG10=TRUE,threshold=c(5e-8,5e-7), threshold.lty=c(1,2),threshold.lwd=c(1,1), threshold.col=c("red","blue"),
       amplify=TRUE, ylim=c(0,16),cex=0.5, signal.cex=1.5,signal.col=c("#d581b7"),signal.pch= 18,chr.den.col= NULL,
       file="jpg",memo="",dpi=300,file.output=TRUE,verbose=TRUE,width=8,height=4)

